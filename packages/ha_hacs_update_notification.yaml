automation:
  - id: notification_hacs_updates
    alias: "Notification: HACS updates pending as persistent notification"
    trigger:
      - platform: state
        entity_id: sensor.hacs
    condition:
      - condition: template
        value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
      - condition: template
        value_template: "{{ (states(trigger.entity_id) | float(0)) != 0}}"
    action:
      - service: persistent_notification.create
        data_template:
          title: Updates pending in HACS
          notification_id: hacs-update
          message:
            "{% for repo in state_attr(trigger.entity_id, 'repositories') %}\n\
            \  **{{ repo.display_name }}** _{{ repo[\"installed_version\"] }}_ -> _{{\
            \ repo[\"available_version\"] }}_\n{% endfor %}"

  - id: notification_ha_update
    alias: "Notification: HA updates pending as persistant notification"
    trigger:
      - platform: state
        entity_id: binary_sensor.updater
        from: "off"
        to: "on"
    condition: []
    action:
      - service: persistent_notification.create
        data_template:
          title: Updates pending for Home Assistant
          notification_id: ha-update
          message: >-
            New Home Assistant version {{ state_attr("binary_sensor.updater",
            "newest_version") }} released!

  - id: notification_persistent_to_mobile
    alias: "Notification: Send persistent Notifications to Mobile Devices"
    description: ""
    use_blueprint:
      path: EPMatt/persistent_notification_to_mobile.yaml
      input:
        mobile_notify_service: notify.all_phones
        replace_notifications: true
